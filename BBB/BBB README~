%  .--.      .-'.      .--.      .--.      .--.      .--.      .`-.      .%
%:::::.\::::::::.\::::::::.\::::::::.\::::::::.\::::::::.\::::::::.\::::::%
%'      `--'      `.-'      `--'      `--'      `--'      `-.'      `--'  %
%                              ____  ____  ____ 			  %
%			      / __ )/ __ )/ __ )			  %
%			     / __  / __  / __  |			  %
%			    / /_/ / /_/ / /_/ /				  % 
%			   /_____/_____/_____/        			  %
%'      .--.      .'-.      .--.      .--.      .--.      .-'.      .--.  %
%:::::'/::::::::'/::::::::'/::::::::'/::::::::'/::::::::'/::::::::'/::::::%
%  `--'      `-.'      `--'      `--'      `--'      `--'      `.-'      `%

%=========================================================================%
%                             Useful Commands                             %
%=========================================================================% 

This is the general way to ssh into the BBB
>> ssh drz@192.168.7.2

If you wish to change network settings, these are the files
>> sudo nano /etc/network/interfaces
>> sudo nano /etc/wpa_supplicant/wpa_supplicant.conf

Useful to grab network data
>> sudo ifconfig

Git Commands
>> git init
>> git config --global user.name "kat284"
>> git config --global user.email scokie@rocketmail.com
>> git clone https://github.com/kat284/nexus_project.git
>> git add 'Filename.txt' or git add *
>> git commit -m 'Text Here'
>> git push
>> git pull

%=========================================================================%
%                           How-To's for the Pi                           %
%=========================================================================% 

There are nice Adafruit guides on how this stuff works so if this doesn't help remind you of the way that work, just check online.

%-------------------------------------------------------------------------%
%                           UART Communications                           %
%-------------------------------------------------------------------------%

First off a simple warning, THE BBB IS A 3.3V SYSTEM! That means if you want to connect it to an Arduino UNO (5V), you need a voltage regulator of some kind or a voltage leveler. If you don't, YOU CAN CAUSE DAMAGE TO BOTH DEVICES! This warning is not of importance for connecting two BBB's or to a Arduino Mini Pro (3.3V), as they are at the same voltage. The Raspberry Pi is also another device that can connect to the BBB without a regulator while the VEX Cortex is NOT!

Now that that is out of the way, to connect anything with UART you will need three cables to connect the GNDs, TX and RX lines. The TX line of one device goes to the RX line of the other and vice-visa. The following are the pins for each UART on the board. You can at most have 4 up at once I believe but due to how the Khan cape is connected, UART 5 would be the best.

# UART	RX	TX	CTS	RTS	Device
# UART1	P9_26	P9_24	P9_20	P9_19	/dev/ttyO1
# UART2	P9_22	P9_21			/dev/ttyO2
# UART3		P9_42	P8_36	P8_34	/dev/ttyO3
# UART4	P9_11	P9_13	P8_35	P8_33	/dev/ttyO4
# UART5	P8_38	P8_37	P8_31	P8_32	/dev/ttyO5

If you notice, each UART (mostly) have 4 connections. The two we didn't talk about are CTS and RTS and they are used for a sort of handshaking between devices. This would be very useful but atm isn't something we are going to be dealing with so they can be ignored for now.

The robotControl_BBB.py code includes UART 5 code for talking to other devices.

%-------------------------------------------------------------------------%
%                                Khan Cape                                %
%-------------------------------------------------------------------------%

The BBB was originally used to control the Rover 5 or Khan chassis so a special cape was made to connect with it. The pins for the cape are in the pinout file and should guide you to the proper pins to use. Remember!! Not all pins work on default.

%=========================================================================%
%                         Full Installation Guide                         %
%=========================================================================% 


%-------------------------------------------------------------------------%
%                              SD Card Image                              %
%-------------------------------------------------------------------------%

Luckily for the BBB, imaging is the easiest way to install Ubuntu (which is what we are installing). Specifically, we are using Debian (wheezy) as it has offical support and because of the Pi also having the same distro.

First, we will need to get the actual image file. If it's not on the computer, it can be obtained from the following site or from the command.
	http://beagleboard.org/latest-images
>> wget http://debian.beagleboard.org/images/BBB-eMMC-flasher-debian-7.5-2014-05-14-2gb.img.xz

We then need to verify it downloaded correctly as to avoid issues later.
>> md5sum BBB-eMMC-flasher-debian-7.5-2014-05-14-2gb*
- The output for the above img should be the following. If it's not, re-download.
	 74615fb680af8f252c034d3807c9b4ae  BBB-eMMC-flasher-debian-7.5-2014-05-14-2gb.img.xz

Lastly, we just get the image and clone it onto the SD card. This can take 15 mins or more.
>> unxz BBB-eMMC-flasher-debian-7.5-2014-05-14-2gb.img.xz
sudo dd if=./BBB-eMMC-flasher-debian-7.5-2014-05-14-2gb.img of=/dev/mmcblk0
- If you want an update on how the progress on the dd command is going, typing the following in another terminal will update the previous terminal every 10 seconds.
>> watch -n10 'sudo kill -USR1 $(pgrep ^dd)'

%-------------------------------------------------------------------------%
%                               eMMC Flash                                %
%-------------------------------------------------------------------------%

-For writing onto the eMMC of the BBB,make sure the BBB is not powered and then insert the SD card and hold the boot select button down (next to the where the card is inserted). Once it's held down, apply power and release the button.
-If it's successful in booting up, the LEDs should start a flashing procedure visually via a Cylon Sweep pattern. Once this stops and all LEDs are full on, remove power, the SD card and reboot.

%-------------------------------------------------------------------------%
%                               BBB Setup                                 %
%-------------------------------------------------------------------------%

At this point, connect the BBB to the computer via USB and connect the power to a wall outlet. Use the following to log in.
>> ssh debian@192.168.7.2
- If asked about a RSA key or a ssh key, say "yes."
username: debian
password: temppwd

In case you are using an SD card, to expand the root to use all the memory, do the following.
>> cd /opt/scripts/ 
git pull 
./tools/grow_partition.sh 
sudo reboot
- If you are using the SD card, skip the next part about swap. It is too destructive to the SD card.

The Pi has one advantage over in BBB in the case of processing. The BBB, being low in processing, was also not given much RAM to work with. This will slow it down greatly and also limit what can be done on the BBB. To fix this, we will be using swap. Swap creates a file to "use" as RAM at the cost of lowering the lifetime of whatever is holding the memory. This disadvantage isn't too much an issue to us as the lowered lifetime will give us more use of the device in the long run. To create 1GB of swap, do the following.

>> sudo mkdir -p /var/cache/swap/   
sudo dd if=/dev/zero of=/var/cache/swap/swapfile bs=1M count=1024
sudo chmod 0600 /var/cache/swap/swapfile 
sudo mkswap /var/cache/swap/swapfile 
sudo swapon /var/cache/swap/swapfile 

We also will need to load the swapfile on startup by adding the following line into the file.
	/var/cache/swap/swapfile    none    swap    sw    0   0
>> sudo nano /etc/fstab

Test the swapfile with the following
>> top
- KiB Swap should be about 1GB



The hostname or the name of the BBB will need to be changed from "beaglebone" to "BBB".
>> sudo nano /etc/hostname
>> sudo nano /etc/hosts

Change the file to match what is below.
%\-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=/%
127.0.0.1       localhost
127.0.1.1       BBB
%/-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\%
Click Ctrl+X, then y then Enter to save and exit when done.

We next need to disable the HDMI.
>> sudo nano /boot/uboot/uEnv.txt

%\-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=/%
##Disable HDMI
cape_disable=capemgr.disable_partno=BB-BONELT-HDMI,BB-BONELT-HDMIN
%/-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\%

Now we need to setup WiFi on the BBB. Luckily this is pretty much like the Pi. Make sure to edit the file to be the same as below.
>> sudo nano /etc/network/interfaces
%\-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=/%
auto lo
iface lo inet loopback

#auto eth0
#iface eth0 inet dhcp

auto wlan0
iface wlan0 inet dhcp
    wpa-ssid "Moto-Wifi"
    wpa-psk  "zaq12wsx!"

# Ethernet/RNDIS gadget (g_ether)
# Used by: /opt/scripts/boot/autoconfigure_usb0.sh
iface usb0 inet static
    address 192.168.7.2
    netmask 255.255.255.252
    network 192.168.7.0
    gateway 192.168.7.1
%/-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\%
Click Ctrl+X, then y then Enter to save and exit once complete.

We can now ssh into the BBB using wifi. We should also change the password to something a bit easier to remember aswell.
- Change the password to "zaq12wsx"
>> sudo passwd debian
sudo reboot

%-------------------------------------------------------------------------% 
%                           Packages and Files                            %
%-------------------------------------------------------------------------% 
Now that you can ssh in, go ahead and do so. We will need to install all files and packages from before.

Currently this is the list of useful files/packages (* Already installed)
- PySerial
- Github
- pip
- Adafruit BBIO

Of course we will have to update the BBB aswell as install packages, the following will install those aswell as some required packages.
>> sudo ntpdate pool.ntp.org
sudo apt-get update
sudo apt-get upgrade
sudo apt-get install build-essential python-dev python-setuptools python-pip python-smbus git-all python-pip python-serial -y
sudo pip install --upgrade pip
sudo pip install Adafruit_BBIO


Well everything is done and now you can do whatever you want with the BBB... of course, if you want to start over that is. To get all the files and libraries, you will need to use GitHub to pull the repo online. 

To finish the Git setup, enter the following
>> git init
git config --global user.name "kat284"
git config --global user.email scokie@rocketmail.com
git clone https://github.com/kat284/nexus_project.git

This is a reminder of how git works
>> git add 'Filename.txt' or git add *
git commit -m 'Text Here'
git push
- Use the following to just pull from the repo
>> git pull

